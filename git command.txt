git init #to initialize the git

git status # to check the status

git status -s # to check the status in short form

git add filename1 filename2 #to add file to the git stage

git commit -m "message" #to commit the change in git stage

git comit -a -m "message" # to commit the new changes

git rm --cached FILENAME  #remove file from git staging area but it will be present local repo

git rm -r --cached DIR/   #remove file and sub dir inside the dir  from git staging area but it will be present local repo

touch .gitignore  # to create git ignore from git bash

vim .gitignore to add file in vi editor

git log -1 #to see last commit message

git log --oneline -1 #last commit in one line

git --amend #to change the last commit

git --amend --no-edit #

git config --global core.editor "notepad"  #to change the  global config core editor

git restore --staged FILENAME # to unstage the file

git restore FILENAME to revert the change



--------- Remote Repository/Github--------


git remote -v  #to check the current remote dir

git remote add origin the_url_end_with_git  #to add the remote repository

git branch -M main to change the branch name



--------Git branching -----
git branch --help  #to open help in web browser

git branch -M main  # rename the branch

git branch BRANCHNAME  #to create barnch

git branch #to see branch 

git branch -r # to see remote branch

git branch -a #to see all branch

git checkout -b BRANCHNAME create and change to branch

git checkout #to change the branch

git branch -d BRANCHNAMETODELETE #to delete the branch from git staging

git push origin --delete BRANCHNAMEFROMREMOTE #to delete the branch from git remote repo


git fetch #to fetch all the changes from remote dir

git fetch --all

git merge #to merge the fetched changes

git pull #fetch + merge

git push origin -u REMOTEBANCHNAME 

git push --force-with-lease #safer option, it will not overwrite if more commit were made by any dev

-------- Stash ------

git stash #temporarily send the change to stash

git stash apply #to apply changes in stash

git stash list #to see all the changes

git stash apply stash@{1}  #to apply changes of a particular branch

git stash save "message" #to save the message with the stash

git stash pop to delete top stash

git stash -u # to push untrack file to stash

git statsh branch to create the branch with stash changes

git stash drop stash@{0} #to remove particular stash

git clear #to remove all stash


-----git reflog-----

git reset --hard HEAD~2  #hard reset to 3rd last commit

git reflog #to check hsitory

git reflog --since="1.hour" #to check history of some particular time

git log -g # list of all commit

git branch lost_changes HEADCHECKSOME #to restore to some head


-----------git rebase-----------
#Rebase command change the history of git not of remote

git --rebase origin master #to rebase to master

git --rebase continue # to continue rebase

git reset --hard origin/master


-----git cherry-pick----

git cherry-pick  #to pick anyparticular commit



-----git and Eclipse intigration-------

windows->showview->git->select git satge, git repositoires and git reflog












 








